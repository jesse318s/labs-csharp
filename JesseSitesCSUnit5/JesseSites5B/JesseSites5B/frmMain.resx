<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxPizzaParlor.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAoHCBISEhgSEhUYGBgZGBgYGBgYGBoYGBgYGBgZGhgYGBgc
        ITAlHB4rIRgYJjgmKy8xNTU1GiQ7QDszPy40NTH/2wBDAQwMDBAPEB0SEh4xKyErMTExNjQxPzExNDQx
        NDQ0MTQ0NDQ0NjQ0NDQ0NDQxNDQ0NDQ0NDE0NDQ0NDQxNDQ0NDT/wAARCADhAOEDASIAAhEBAxEB/8QA
        GwAAAgIDAQAAAAAAAAAAAAAAAAMBAgQFBgf/xABGEAABAwIDBAYHBAgEBgMAAAABAAIRAxIEITEFIkFR
        BhMyYXGRFEJSgaGx0WKSwfAWM3KistLh8QcjU1QVQ4Kj4uMlc5T/xAAaAQEBAQEBAQEAAAAAAAAAAAAA
        AQIDBAUG/8QAJhEBAAMAAQQCAgIDAQAAAAAAAAECEQMEEiFREzFBYYGRBRQyIv/aAAwDAQACEQMRAD8A
        5OEQrQiF9h5FYRCtCIRlWEQrQiEFYUQrwiEFIRCvCiEFYRCtCIUFYRCvCiFRWEQrQiEFYRCvCiEFUQrQ
        iEFYRCtCIQVhEK0IhBWEQrQiEFYQrQiEaVhCtCEF4RCvCIRlSEQrwiEFIRCvCIQUhEK8IhELhEK8IhBS
        EQrwiENUhEK8IhDVIRCvCIQUhEK8IhDVIRCtCmEFIRCvCIRVIRCvCIQ1SEQrwiEFIRCvCIQUhCtClAyE
        QrQiFUVhEKwCIRFYRCtCIQVhEK0IhBWEQrQiEFIRCvCIRFIRCvCIQUhEK8IhBSEQrwiEFIRCvCIRVIRC
        vCIQUhEK8IhBSEQrwiEVSEQrwiEFEK8IQXhEJkKIVRSEQrwphRC4RCZCLUC4RCZCiEFIRCvaphELhEJk
        IhAuEQmQiEC4RCvCIQLhEJkIhBSFEJlqIQLhEJkIhFUhRCZCIQLhEJkKIRVIRCvCIQUhCvCEDLVMK9qm
        1VC4UWptqLUQq1TCZCLUC4RCvaptUCrVMJlqLUC4RCZai1E0uFFqbai1FKtRamWotQUhEK9qLUFIRCva
        i1AuEQmWotQLhRamwi1AuFFqZai1UUhRCZaotRVLUK8IRT4RCZai1GS4RCZai1AuEQmWotQLhEJlqLVA
        uEQmWotRC4U2plqLUCoU2plqLUCoRCZaptQ0qEQm2qLUC4UWptqLUC4UWplqLUUu1FqZai1AuEQmWqLV
        QuEQmWotQLhCZahA+1FqbCIUCrUWpwao6MYV+LoGs57Wm97QLLgA0wI3gfOVzvyVpmunFw25Z7alWotW
        6dsGoNHsd43N+EFY9bZGIaN1jXnueB49qFiOop7drdFzR+GttRasx2Bqt7VN48Gl/wDBKS5lvaBb+2Cz
        +KF0jlrP1MONuDkr91km1FqxtrVnNovNIi63dIhxLuQbxK6alsNjmMfe8SxhMwQCQDMEc1zvz1rON8XS
        35YmY/HtogFNq6Cv0bewxeJ5FundIKxXbDrDSx3/AFEfMJXqKT+Wp6LmzYjY/TU2otWXiMFVpxcwwSBc
        CC2SYGeuvckhq6VvW31Lz347U8WjCrUWp1qLVpgm1Fqdai1Ai1FqfaotVCbUWp1qLUUm1Fqdai1Am1Ra
        nQiEUm1Fqbai1Aq1CbahA61Fq3btiM4VKn/bj+BUdsQ8KnmyT5hw+S80dTX1L32/x/LH1jUNbmsj/Dpv
        /wAew831T++4fgsmrsarEMqMngS05e6Vm9HtmeiYZlAkGy7McbnE8u9cOfkrbMeno+mvxWmbR+GzUKUL
        g+kFIUKlbsu/ZPyUVargWOpuqPYxzQHFxc0GA2bjmO4rD2VtHD4kEYZ7HhgbcGeo0zbLeAyPks7DuP8A
        w2o6fUrkznLQ58j3gEe9ed/4ZYl4finMaP8AMayGM1hheXNY3XPrG555XcYU3w8M9RMWmMj7d7h8Sx82
        va+DEhwcYgETHLT3J65nYOysNh8SKjRc6nVqtb1kNe1z2saWNLcyAHBuYJzd3LL27SrYqpRqUnmna9j3
        23S9jTlTLmkCN58zOYPIBNbjnnPr+mzx9EvpuY2LjBF3Zlrg4THDJa3aWFe+wU6QYGNtLWuEXHMkSc5l
        anp/t7E06dKphQaRD3sqBoY+XWMc1rgQYI3x3wV1GzaVSnhab8SQaj3ABwIIc1zZaTECcit1vNZ2HO/x
        c0xW0TrnH4Oo3Vj/AHNLv4ZSHw3tbv7Qt+BXZqZXaOpt+cc7f43jn6mXFiCJBy58PNSWrrKmDpPO/TY7
        9pjT8wuXpt3W/st/hC9HFzTeZjHh6rpfgiJ3dKtUWp9qLV214yLVNqdai1NCbUWp0BRCapNqLU60qLU0
        KtUEJ1iLU1SY/MFCdahNHVoWANpt9kebp+DSr/8AEGd37/8AIvk7D9L89PbMUrFbjqZE/Ij8SFPptP8A
        JZ/Mmw1HLT2ykLFbjKZ0nyn5FMFdv2vuP+iad9fcGqCJBUCo3+4I+YUda32m+YRruj2VWxQpYE05Y8tF
        XrWF4a4U/wDNe7I5yd1ukw+RwXMdCcXQBrVNnUCXEUw9oDqgZJcQZuLg3UWtaCbSSdAOsvaeLT7wVX0V
        js7GHvtafjCmPLPT7MzseXMbNwuEq7Ue8139Y6o8mgRutfY8uLmObqCLg0jIjUrMx9aiKoqU3swxLGbr
        2Fm5e0ucy61oL27pI4MyujLaM2Rh21OtbRY2pmb2NDHy4QTe2DmCePFKx+wcNiKjatZjnvZaGvNSpcA0
        lzR28wCSYPNMT/XmPrGj6abPbjKdP0N7WFj6jze9xYXuMNaw5gQ5r+QBcPaE9jWIOGoAEm1zGkySJax0
        weIWo2vsGlig0VXPFpJaWFrHb0TLmtBdoNZWzw7SymykCLWABotaIjKd0DmeHFMK8Fq2iV1KhCr2ALlA
        4AQ4ObG7D2lp3cuPDLI8QurULdOSaTsPN1HTxzxETOY4+pimBwbewTMS4DT4fVOZUad3jIHLO260giQY
        nyMTBWT0ywfWYVzwQHUjfOm6O2J8M45tCTTw7a2Gc+gQxzWta24v3XtM7+cFsFsEDITqMkt1HJ3xn04x
        0HFXjnfM+/QsRYE6m0lomJgTBkAwCYPJWsX0K2i0bD4tqzWckixFqfYixXUY9qLU+1QQOaamEWotTo7j
        5fVRaeXmfomrhNiE608x5f1QmrhM8fjxUtKj8yoC+S+gu0q7XJYUoL1FS0cgmcEtqspqw0yVm1HAZEjw
        JCo1A1UXTnVnx23feP1VQcvrvfNQFDTBhDuk4VnDjl+y36JrcQ8esfgPksbuVmHgkL32j8sxmJdPa8y4
        /irHFVJ1HhH1KwxyVw+R4Kr8tvcssYt/P5D8FPpzvZ8z9AsQniomEajnv7bD0w+yPNQ3Hayz4hYQPBBd
        x80WOo5I/JfSLE03YZ7XjJ1gAmLnXttaOckAR3rT4DaLcDTdSxE74vaRJaHwL6Z4AgxDtD3QFuatNr2l
        r2hzTwcAR5FRUYHAhwBGjgRII7wdUrOTrVuptavbK7DcJaAQc5nI94hTB7h5n6JdNtnYgDl6p+h7/ms2
        g5jgZcRaBItJIn5+5eyvNWY8vm24rb4Y1p5jy/qjq+8/L5LLYxjm3B4giRcIyic+SU00yCW1KZgXGHtM
        NibvCFr5K+07LeiOqHj45/NSGRoE0Op3WB7ZiYEzGgMRplqq4ikHNIBIMGCCRBjLQqfNX2vx29F2I6tN
        sjT4n+6XUa+N0tB5mSPIR81Pmr7Pit6VsQtd6Jjf91T/APzf+xCn+xVfis4z9O3RPozYmP1vHl2FI6dG
        QDhwJjPreeh7GS4YhVXkx6nfN6eNj9R+/n/Amfp2wGDQd98E8/ZXnygGNPzORHxTB6IOntP/AEH/AH2/
        RDundIEzReCNRc3WYhedych4nu7/AJDyRrn/AE+ATB6KendGf1T9J7TOU89VI6d0DH+U/P7TPjvZLzmU
        ypVc8y4yYA9wED4BMHoo6eYc/wDKqzpG5/Mru6b0IJ6mtl3M7/tZ6Lz2hQMsdzcBH58Fn4ilDHHuPyTG
        orExrsm9O8NnuVRHcw+RD80Hp5hdbKvDgzj/ANa83Y2Y73AeaZ1OR17Lj910JjL01vTbC6llYRkZYw/J
        5V29NMHOrxnGbBrnyd3a+C4/ZOz21a1Km82te9jHHk17gDHfBXX/AOJfRXCYfC06+GYKZa9tNwbo9rmk
        gmTm4FuveZlTclq1Ig1nTPBe2/j6juGqn9MsFHbfpPYfpMcl5aImVN2WSrOPU29MMEf+Y6QY/V1NeWTU
        1vS3AnPruEmWVBxiezzyXleBANVodBBmZ07JXT43YXVOsqUwHWyBPA6GQVm1u124+CbxsS69vSfBade2
        P2amUZn1VYdJsFP69k5cH5zp6q8xq0Gtuhs66g5eBRgqc0weGeXDUpE79MRTZx6f+kuB/wBwyIn1ss4n
        TmpZ0nwbHXtxLGubo4XA8JGnhkcl5uyqw5tDfIR5wshrhUDqdNoc4tzA7oO8OAnip3T6Zmsfet90l2wK
        jWso12vZJuYC5p4NggjMD8fLnDVIIOkiMxHjmNBmr0djVnneuZuhxLmnLQAkAEjPhks3H7LaxgDXueTB
        ueKdNsRBLAXlxzA1A0Kxa0WlYrObBeA2g9tRrmuNwi2STnkIGeY7l1n6YtaA2pQqXjJwZaRI145eC4So
        BSc1ziNQWmRbIzglsjgcp5raYLabfSnNk9stIAOZcSGgc84SImJ8JafDpD0zbww1Y/d+qq/pPiDBp4R1
        t1pL32wZjMRkO8wsipjqdtxfTE3RL6YLi3UAzPiuXr7WY641C9peSHNY2m4RAAhxziDwW6xaf+o/pibe
        t/ltf0zrf7b98/yoXPelUPYr/wDbQttNN6AyP1rZgeuzUnTXgMygYGlP69vaAAg5tLC6+/siHbsar0vE
        bNwrHNDKNM8ewG6+PCYgDPLvT6eyaQfHVU3ajsNA4D2c4j4rHyx6dPjl5U7B04yqNmDq4RMi3hyJ8lPo
        dL/VHDTPnOUeHmvWMRg6NIAlrASNA0ZToYjL+nFVp4Vlj3BrHFrnNhz2sJEiHW6RqeZy71Pm/R8U+3lA
        wlL/AFHdogAMJFoHauHGZER71ZuCpwN5/q+o/WTdw5RC9RbhnuptIHrOBaOQlpIB97kYysKdSxoIEgOu
        AJAJAIAnLRI5d+oWeLPy8uGAbl2znmQx/LgI5/gmDZzOAqcPUfpx4L1ndL4Y4AuHZzIJiCNNYnnHzits
        +o2YJDSASA3kAHZxBMkkxlAOqnzfo+L9vOtkbKZUrUqb+sY0v7VtrWiZlxd3Tn3rq9udGMLTw1WoK5Lm
        03uAvZm4NybESc1tajKdWpvVGgsaGAzDXcGtPL3cjyWu26S/BvLiBALm5iTIcCSBzMe896RzecdKxFaz
        Ga8yoNm3/wCwfgtns/Zr6zKhbAFPD4io4n2ab2yBzMub5rO2RsGpVq4brA5tOpiWNvy0eW5N9xK6t4p0
        8J1bch6FtGnkJtuxjQ1zzwG7mfBdJtjzxDKp9H9nFoIqv0bNrxPfG7rGib09qvxVKnhqNN5a1zXuda4A
        gNLGAF4F8y/MaWj3a3C7TpscG1GGx7CYaMy4Dj4WhyfhMax9znOZAZmYdbkZiJjV3Z8FxnkmfL1ZW8TP
        1jkafReo5zmlr2m10dg5wbZF0xOSxGbAriGmnnMdtuueQz/MLumdImEkU2XQGsEFoLm55DdnSXDl5Bba
        hRkCmWtBhz3OGcw3IGeGnvBT5ZcuyLfTzeh0exTajHMYRG82SyZGYiTESAtptPZ+06rx1hF4AENNNu6B
        u5MA+0M+Wq7IMLHuptDsgIGoDnRyyzEH3FPqFrIex1wkMJIktnPKDmO7LjzUnkn0sUz6mXmx6P1rv819
        jbgHmWl4BkktZcJ8JAz1XW9HNi4EUWNqBz6m8SZcAd4kZNdaNQInOFgY9h9IIqMcLi+yQQC1mjhHPPmB
        K2uFwzmxWDrmndbcRMOEG/nGgz5J8llp4mU4jD4OqZdTD4kBxFtwB1LMx6o1mFkNbhwZ6u3LK3dEcNP7
        LiNpYl7uspEtDQ43ayW36QXQCADOs5ZBKwmOdhwWUg57cnBtzWlpIExLSNTwjSYzK5WpzzEzFv48LFuK
        JiM8On23h6dQOa1rnNe6ncxpANrJkF7jDZJm6DHIrA/RljqIY+vFpJaWtHYdDrDLsyHSQftO5rUu6TkP
        sdTeHSGxew5nwYOaysZtpzGG5jtIkFpgmADw4kLnFepjx+91uZ4ZM2NsDD12OdfUaybSHNbDoAN2XIn3
        QsmvhDhrmt2hTomqA9zfRxc5pzbL4Li2Wk5Za9657B1q2Hp3MqnO2WHeua5shzQ6W5GAdDw5rLx22KLq
        49JY4ANbm1lMuDCLg1ugMFxHmvV28s2nZ8fj6cZtx9sZHli47CVaNNj+vY9hvfTcxrt6HNY+LmCDkAc4
        3eYSX1bYa4NJaIkGRnByIyOqfjHnEU2NptLWNe4sljQbSTMhoiTkeKxqOzrWwbp4w35Zrr/6zJcpzdhX
        0nx8x9FCyPQe933f/JCzkmy9Hbh2yHuBL9CQ64XToJMZGPee5VY+oKmZiNCYh2ecQIjLll5ow7TFoOkE
        GJIAmTEayde9MxdSSIBb2YbnkwAASTGeX5zXB6l8fWbUbLwMmzDc5ziJI5mIjitTg8M6oXFoaTEkuMWE
        55GCRkHeXcFv8O0dV1jWtaSA0HKdTMDnP4awkUOrAc0uaAYGjQMhll3TMn8Mm+EzyjZ1MNp9W9hccxkd
        3fLpiY58fgkY2je6Gkl7ASBk6Sc8jA56LNZXptb1d928Jc4Hu7s/cpxeKw5DXsJLx62QiZudmNczlH9Z
        Ezqzi+GrOIa1xB3WwIInIE+J8lTbfWU6b3FxAaMy14AAdAHaI45d4VGY+iIBkiIjMnuzLjPHwWH0h2t1
        mHq02zD6TmmRJkAmfDRWImZSZjHC18S65suEGRcXAQOcnn710eHwr34R9MugvJYDMgB08NeBPCVxNHts
        kEi5sgZkgESAPBd6zFGoAS17QDmx27Mcx35+ZW7U7ZjHGueZV2fh2YMYbraoLBjGPLyC0NaGsy1OQDSV
        gbY2vSNFjKdYT1eKDgwXSamKvDHx2Q5ounuHNbJ4cTu5eBMfNafpDhq9QMtbdBO9LQcwMjoTpzK3E79p
        mNNa6oNy572lphsnITnJ4SYhdLs/B0zSqXMLXntMh/Ya02lpdk24kjWQCsLo612Hc99RjiTaBBZMSS7t
        PB9nTkukO2KQALWPmdAyPHMmPisz6h6eGKzWYtOa4zDVeqrMJpOAB3A3cfMkAi8Qc8oPmvS6T3vfa+N3
        M5kT3a+H5043a9M4mtSe0FraYFwd2jv3ZBsiPes4MP2/JS1Yn6c5ylpiJ2G/Ziw27QuMy5zrc8wDkCQY
        +fBY+NcwUxvsAkXgOmSRcXZ6Z6DTLvWlcRxn3uA+ZVHubpa0jvcP6qdpNml6T7Ue+uaYexzGWupuY1oO
        bWky4ZmDIz5LodlYoMw7Mmkua17mmACS3S3yz4LUvwFBxJLGDwLx8sllNxAAgFojIbvDhxW5rExEMRMx
        OsaphXOe97iDcAOxTdkC4jVuu8d6ZPHQKz9m0nNbDW3S66WgCMrYAGuqf6YPa/dH1VX48c3eYH4K+UyG
        PT2HRJ36bCM+yGgzGWoPGFLNgUQ4HqWmCDEZGOBAAkK7scCfX8Lv6JTsWJBAOXCTn459yvlMg6rsmmW2
        9U1gmYa0tg92chIr7GouIc9swAAXOPAACJPcqdYPY8y48Z4lR1p4Mb91v0TyeDhhKQyDhyi5pUmhSGp8
        o/AJIqVOAjwy+SC+pxdCvkZPVUuTv3v5ULEvf7Y80KeUb92Kc0k3xd2t7XxzzWOcUz22/Ba/rGAZMb5H
        8Sq+kjgG/db84We1vWx9Op+2T4A/RS3FNOgefctb6UeE+5Qa7uR98p2mtp132He8gKr8Q4aMZ98LWXu1
        hEuV7U1smYl0Z2A90lQcSfb8m/0WuDHHirCieZ8kwZYxLBnvZcgGypOLbAyd95YXVji74hQWs4uHxKYM
        t2KYfVHvJKr6W32W+U/isUvpj+31R1reDT8FcTWScceAaPBjfoqnGvPNI67k34o613IJ2mmHE1OZ81Be
        8pd7+Y9wCgl3Fx81cNMDXn+ygsdxd8UotHEqLWpiauQOLvz7kbntfNU3eSB3NTDVrmciovHBpVgx/s/B
        NZgqruA8wng8k3/YCi93IBZZ2c/1ntHvUehsB3qg90fVNgyWIXO5jyCgk+0VmGjRGr3Hw/soc6iNGHz1
        8VdMYRA4klRa3gFmnEMHZpt96HY1/ANHuTTGJZ9koWT6U/u8h9EJoxwmMQhRo06KXdke9ShQQExiEIi7
        9FgVtVKFQkKQhCos1MCEKIu1QhCBdRVCELQEDRCED6Oq2DNEIWJWGWzRYuI/PxQhSFYOI1P54JDvz5oQ
        rAhqg/n4KUKoApCEILoQhB//2Q==
</value>
  </data>
</root>